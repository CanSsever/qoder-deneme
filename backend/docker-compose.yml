version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: oneshot_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - oneshot_network
    restart: unless-stopped

  celery_worker:
    build: .
    container_name: oneshot_worker
    command: celery -A apps.worker worker --loglevel=info --concurrency=2
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./dev.db
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-dummy}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-dummy}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-oneshot-dev}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-super-secret-key-change-in-production}
      - ENVIRONMENT=development
    networks:
      - oneshot_network
    restart: unless-stopped

  api:
    build: .
    container_name: oneshot_api
    command: uvicorn apps.api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - redis
      - celery_worker
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./dev.db
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-dummy}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-dummy}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-oneshot-dev}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-super-secret-key-change-in-production}
      - ENVIRONMENT=development
    networks:
      - oneshot_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: oneshot_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - oneshot_network
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:

networks:
  oneshot_network:
    driver: bridge