"use strict";
/**
 * TypeScript definitions for OneShot Face Swapper API
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentRequiredError = exports.RateLimitError = exports.ValidationError = exports.AuthenticationError = exports.NetworkError = exports.OneShotError = exports.ErrorCode = exports.JobStatus = exports.JobType = void 0;
// Job Types and Statuses
var JobType;
(function (JobType) {
    JobType["FACE_RESTORATION"] = "face_restore";
    JobType["FACE_SWAP"] = "face_swap";
    JobType["UPSCALE"] = "upscale";
})(JobType || (exports.JobType = JobType = {}));
var JobStatus;
(function (JobStatus) {
    JobStatus["PENDING"] = "pending";
    JobStatus["RUNNING"] = "running";
    JobStatus["SUCCEEDED"] = "succeeded";
    JobStatus["FAILED"] = "failed";
    JobStatus["CANCELLED"] = "cancelled";
})(JobStatus || (exports.JobStatus = JobStatus = {}));
// Error Types
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
    ErrorCode["AUTHENTICATION_ERROR"] = "AUTHENTICATION_ERROR";
    ErrorCode["VALIDATION_ERROR"] = "VALIDATION_ERROR";
    ErrorCode["PAYMENT_REQUIRED"] = "PAYMENT_REQUIRED";
    ErrorCode["RATE_LIMIT_EXCEEDED"] = "RATE_LIMIT_EXCEEDED";
    ErrorCode["INSUFFICIENT_CREDITS"] = "INSUFFICIENT_CREDITS";
    ErrorCode["JOB_NOT_FOUND"] = "JOB_NOT_FOUND";
    ErrorCode["PARAMETER_VIOLATION"] = "PARAMETER_VIOLATION";
    ErrorCode["DAILY_LIMIT_EXCEEDED"] = "DAILY_LIMIT_EXCEEDED";
})(ErrorCode || (exports.ErrorCode = ErrorCode = {}));
class OneShotError extends Error {
    constructor(code, message, statusCode, details) {
        super(message);
        this.code = code;
        this.statusCode = statusCode;
        this.details = details;
        this.name = 'OneShotError';
    }
}
exports.OneShotError = OneShotError;
class NetworkError extends OneShotError {
    constructor(message, statusCode) {
        super(ErrorCode.NETWORK_ERROR, message, statusCode);
        this.name = 'NetworkError';
    }
}
exports.NetworkError = NetworkError;
class AuthenticationError extends OneShotError {
    constructor(message = 'Authentication failed') {
        super(ErrorCode.AUTHENTICATION_ERROR, message, 401);
        this.name = 'AuthenticationError';
    }
}
exports.AuthenticationError = AuthenticationError;
class ValidationError extends OneShotError {
    constructor(message, details) {
        super(ErrorCode.VALIDATION_ERROR, message, 422, details);
        this.name = 'ValidationError';
    }
}
exports.ValidationError = ValidationError;
class RateLimitError extends OneShotError {
    constructor(message = 'Rate limit exceeded') {
        super(ErrorCode.RATE_LIMIT_EXCEEDED, message, 429);
        this.name = 'RateLimitError';
    }
}
exports.RateLimitError = RateLimitError;
class PaymentRequiredError extends OneShotError {
    constructor(message = 'Payment required') {
        super(ErrorCode.PAYMENT_REQUIRED, message, 402);
        this.name = 'PaymentRequiredError';
    }
}
exports.PaymentRequiredError = PaymentRequiredError;
//# sourceMappingURL=types.js.map